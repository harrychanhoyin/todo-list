{"ast":null,"code":"var _jsxFileName = \"/Users/harryhoyin123/Desktop/todo-list-uprise/src/components/Todo.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getTodoList } from '../redux/actions';\n\nclass Todo extends React.Component {\n  componentDidMount() {\n    this.props.getTodoList();\n  }\n\n  renderList() {\n    const list = this.props.todo.list.map(item => {\n      return React.createElement(TableBodyRow, {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(TableData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, item.id), React.createElement(TableData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, item.title), React.createElement(TableData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, item.completed ? '✓' : null));\n    });\n    return list;\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(ListTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(ListHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"To Do List\"), React.createElement(InputWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(ListInput, {\n      placeholder: \"What needs to be done?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(ListButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(TableWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(TableHeadRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"ID\"), React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Title\"), React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Completed\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.renderList())));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todo: state.todo\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getTodoList\n})(Todo);","map":{"version":3,"sources":["/Users/harryhoyin123/Desktop/todo-list-uprise/src/components/Todo.js"],"names":["React","connect","getTodoList","Todo","Component","componentDidMount","props","renderList","list","todo","map","item","id","title","completed","render","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AACjCC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWJ,WAAX;AACA;;AAEDK,EAAAA,UAAU,GAAG;AACZ,UAAMC,IAAI,GAAI,KAAKF,KAAL,CAAWG,IAAX,CAAgBD,IAAjB,CAAuBE,GAAvB,CAA4BC,IAAD,IAAU;AACjD,aACC,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYD,IAAI,CAACC,EAAjB,CADD,EAEC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYD,IAAI,CAACE,KAAjB,CAFD,EAGC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYF,IAAI,CAACG,SAAL,GAAiB,GAAjB,GAAuB,IAAnC,CAHD,CADD;AAOA,KARY,CAAb;AASA,WAAON,IAAP;AACA;;AAEDO,EAAAA,MAAM,GAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACA,WACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAEC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,wBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFD,CAFD,CADD,EAQC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFD,EAGC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHD,CADD,CADD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKC,UAAL,EADF,CARD,CARD,CADD;AAuBA;;AA3CgC;;AA8ClC,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AAAEV,IAAAA,IAAI,EAAEU,KAAK,CAACV;AAAd,GAAP;AACA,CAFD;;AAIA,eAAeR,OAAO,CACrBiB,eADqB,EAErB;AAAEhB,EAAAA;AAAF,CAFqB,CAAP,CAGbC,IAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getTodoList } from '../redux/actions';\n\nclass Todo extends React.Component{\n\tcomponentDidMount() {\n\t\tthis.props.getTodoList();\n\t}\n\n\trenderList() {\n\t\tconst list = (this.props.todo.list).map((item) => {\n\t\t\treturn (\n\t\t\t\t<TableBodyRow key={item.id}>\n\t\t\t\t\t<TableData>{item.id}</TableData>\n\t\t\t\t\t<TableData>{item.title}</TableData>\n\t\t\t\t\t<TableData>{item.completed ? '✓' : null}</TableData>\n\t\t\t\t</TableBodyRow>\n\t\t\t);\n\t\t})\n\t\treturn list;\n\t}\n\n\trender() {\n\t\tconsole.log(this.props)\n\t\treturn (\n\t\t\t<ListTable>\n\t\t\t\t<ListHeader>\n\t\t\t\t\t<h1>To Do List</h1>\n\t\t\t\t\t<InputWrapper>\n\t\t\t\t\t\t<ListInput placeholder='What needs to be done?' />\n\t\t\t\t\t\t<ListButton>Add</ListButton>\n\t\t\t\t\t</InputWrapper>\n\t\t\t\t</ListHeader>\n\t\t\t\t<TableWrapper>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<TableHeadRow>\n\t\t\t\t\t\t\t<TableHead>ID</TableHead>\n\t\t\t\t\t\t\t<TableHead>Title</TableHead>\n\t\t\t\t\t\t\t<TableHead>Completed</TableHead>\n\t\t\t\t\t\t</TableHeadRow>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{this.renderList()}\n\t\t\t\t\t</tbody>\n\t\t\t  </TableWrapper>\n\t\t\t</ListTable>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn { todo: state.todo }\n}\n\nexport default connect(\n\tmapStateToProps,\n\t{ getTodoList }\n)(Todo);"]},"metadata":{},"sourceType":"module"}