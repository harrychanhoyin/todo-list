{"ast":null,"code":"import todo from '../apis/todo';\nimport localServer from '../apis/localSever';\nexport const getTodoList = () => async dispatch => {\n  const response = await todo.get('/todos?_limit=50');\n  dispatch({\n    type: 'FETCH_TODO_LIST',\n    payload: response.data\n  });\n};\nexport const getUser = () => async dispatch => {\n  const response = await todo.get(\"users\");\n  dispatch({\n    type: 'FETCH_USER',\n    payload: response.data\n  });\n};\nexport const todoChange = value => {\n  return {\n    type: 'TODO_CHANGE',\n    payload: value\n  };\n};\nexport const nameChange = value => {\n  return {\n    type: 'NAME_CHANGE',\n    payload: value\n  };\n};\nexport const checkboxChange = value => {\n  return {\n    type: 'CHECKBOX_CHANGE',\n    payload: value\n  };\n};\nexport const getLocalTodoList = () => async dispatch => {\n  const response = await localServer.get('/todos?_limit=50');\n  dispatch({\n    type: 'FETCH_LOCAL_TODO',\n    payload: response.data\n  });\n};\nexport const createTodo = formData => async dispatch => {\n  const response = await localServer.post('/todos', formData);\n  dispatch({\n    type: 'CREATE_TODO',\n    payload: response.data\n  });\n};\nexport const changePage = page => {\n  return {\n    type: 'CHANGE_PAGE',\n    payload: page\n  };\n};","map":{"version":3,"sources":["/Users/harryhoyin123/Desktop/todo-list-uprise/client/src/redux/actions.js"],"names":["todo","localServer","getTodoList","dispatch","response","get","type","payload","data","getUser","todoChange","value","nameChange","checkboxChange","getLocalTodoList","createTodo","formData","post","changePage","page"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAClD,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAAS,kBAAT,CAAvB;AAEAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,iBAAR;AAA2BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA7C,GAAD,CAAR;AACA,CAJM;AAMP,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAMN,QAAN,IAAkB;AAC9C,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,SAAvB;AAEAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxC,GAAD,CAAR;AACA,CAJM;AAMP,OAAO,MAAME,UAAU,GAAIC,KAAD,IAAW;AACpC,SAAO;AACNL,IAAAA,IAAI,EAAE,aADA;AAENC,IAAAA,OAAO,EAAEI;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,MAAMC,UAAU,GAAID,KAAD,IAAW;AACpC,SAAO;AACNL,IAAAA,IAAI,EAAE,aADA;AAENC,IAAAA,OAAO,EAAEI;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,MAAME,cAAc,GAAIF,KAAD,IAAW;AACxC,SAAO;AACNL,IAAAA,IAAI,EAAE,iBADA;AAENC,IAAAA,OAAO,EAAEI;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,MAAMG,gBAAgB,GAAG,MAAM,MAAMX,QAAN,IAAkB;AACvD,QAAMC,QAAQ,GAAG,MAAMH,WAAW,CAACI,GAAZ,CAAgB,kBAAhB,CAAvB;AAEAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA9C,GAAD,CAAR;AACA,CAJM;AAMP,OAAO,MAAMO,UAAU,GAAIC,QAAD,IAAc,MAAMb,QAAN,IAAkB;AACzD,QAAMC,QAAQ,GAAG,MAAMH,WAAW,CAACgB,IAAZ,CAAiB,QAAjB,EAA2BD,QAA3B,CAAvB;AAEAb,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACA,CAJM;AAMP,OAAO,MAAMU,UAAU,GAAIC,IAAD,IAAU;AACnC,SAAO;AACNb,IAAAA,IAAI,EAAE,aADA;AAENC,IAAAA,OAAO,EAAEY;AAFH,GAAP;AAIA,CALM","sourcesContent":["import todo from '../apis/todo';\nimport localServer from '../apis/localSever';\n\nexport const getTodoList = () => async dispatch => {\n\tconst response = await todo.get('/todos?_limit=50');\n\t\n\tdispatch({ type: 'FETCH_TODO_LIST', payload: response.data });\n}\n\nexport const getUser = () => async dispatch => {\n\tconst response = await todo.get(`users`);\n\t\n\tdispatch({ type: 'FETCH_USER', payload: response.data });\n}\n\nexport const todoChange = (value) => {\n\treturn {\n\t\ttype: 'TODO_CHANGE',\n\t\tpayload: value\n\t};\n}\n\nexport const nameChange = (value) => {\n\treturn {\n\t\ttype: 'NAME_CHANGE',\n\t\tpayload: value\n\t};\n}\n\nexport const checkboxChange = (value) => {\n\treturn {\n\t\ttype: 'CHECKBOX_CHANGE',\n\t\tpayload: value\n\t};\n}\n\nexport const getLocalTodoList = () => async dispatch => {\n\tconst response = await localServer.get('/todos?_limit=50');\n\t\n\tdispatch({ type: 'FETCH_LOCAL_TODO', payload: response.data });\n}\n\nexport const createTodo = (formData) => async dispatch => {\n\tconst response = await localServer.post('/todos', formData);\n\t\n\tdispatch({ type: 'CREATE_TODO', payload: response.data });\n}\n\nexport const changePage = (page) => {\n\treturn {\n\t\ttype: 'CHANGE_PAGE',\n\t\tpayload: page\n\t};\n}"]},"metadata":{},"sourceType":"module"}